AUTONOMOUS ROBOT DESIGN AND PROGRAMMING.
An introduction to robotics and the design and programming of autonomous robot systems. Topics include basic kinematics, dynamics, and control, as well as sensors, knowledge representation, and programming techniques. Course work includes individual and group projects involving the building and programming of simulated and real robots. Prerequisite: Admitted into an Engineering Professional Program.
/
PRACTICAL COMPUTER HARDWARE/SOFTWARE SYSTEMS.
A practical approach to hands-on computer hardware and software systems in a laboratory environment. Students will be exposed to basic design concepts using off-the-shelf hardware components and to tools that enable the design of complex software systems.
/
PROGRAMMING LANGUAGES.
Introduction, analysis, and evaluation of the important concepts found in a variety of programming languages. Formalisms useful in specifying language syntax and semantics; programming language paradigms such as algorithmic, functional, logic, and object-oriented. 
/
ENTRANCE TO ENGINEERING FOR TRANSFER STUDENTS. 
Entrance to Engineering for Transfer Students welcomes transfer students to the College of Engineering.  Topics include engineering student life, fields of study, ethics, design, and preparing for a successful career.
/
GENERAL TECHNICAL PHYSICS I.
The first half of a one-year technical course. Required for many science and engineering majors, exceeds premedical requirement. The study of physical phenomena in the fields of mechanics, heat, and waves.  Concurrent enrollment in MATH 1426 (per prerequisite) is not recommended if no prior background in calculus.
/
COMPUTER SYSTEM DESIGN PROJECT I.
Analysis and design of an industry-type project that involves hardware and software components to meet desired needs within realistic constraints and standards. The project is to be completed in CSE 4317 the following semester. Multidisciplinary teams of CSE 4316 students are required to develop, review, and present problem definition, project planning, requirements formulation, and design specification. Prerequisites: Admitted into a CSE Professional Program.
/
RHETORIC AND COMPOSITION I.
Introduction to college reading and writing. Emphasizes recursive writing processes, rhetorical analysis, synthesis of sources, and argument.
/
DATABASE SYSTEMS AND FILE STRUCTURES.
Database system architecture; file structures for databases, including indexing hashing, and B+-trees; the relational model and algebra; the SQL database language; Entity-Relationship data modeling; functional dependencies and basic normalization.
/
ALGORITHMS & DATA STRUCTURES.
Design and analysis of algorithms with an emphasis on data structures. Approaches to analyzing lower bounds on problems and upper bounds on algorithms. Classical algorithm design techniques including algorithms for sorting, searching, and other operations on data structures such as hash tables, trees, graphs, strings, and advanced data structures, dynamic programming and greedy approaches.
/
GENERAL TECHNICAL PHYSICS II.
The second half of a one-year technical course. The study of physical phenomena including electricity, magnetism, circuit theory, light, and optics.
/
HISTORY OF THE UNITED STATES TO 1865.
An introduction to the political, social, economic, and cultural history of the United States prior to 1865. This course is designed to help students understand and evaluate their society, comprehend the historical experience, and further develop reading and writing competencies and critical skills.
/
INTERMEDIATE PROGRAMMING
Programming concepts beyond basic control and data structures. Emphasis is given to data structures including linked-lists and trees as well as modular design consistent with software engineering principles..
/
PROFESSIONAL PRACTICES.
Ethics. Contemporary social aspects and responsibilities of computing in a global, societal context. Lifelong learning goals and resources. Entrepreneurship and intellectual property. Project involving written and oral communication. 
/
COMPUTER GRAPHICS.
Theory and practice for the visual representation of data by computers including display devices, output primitives, planes and curved surfaces, two- and three-dimensional transformations, parallel and perspective viewing, removal of hidden lines and surfaces, illumination models, ray tracing, radiosity, color models, and computer animation.
/
THEORETICAL CONCEPTS IN COMPUTER SCIENCE AND ENGINEERING.
Selected theoretical concepts including regular and context free languages, finite state and pushdown automata, Turing machines, computability, and NP-completeness. 
/
STATE AND LOCAL GOVERNMENT. 
The principles and organization of American state, county, and municipal government, together with current problems and the constitution and government of Texas.
/
DISCRETE STRUCTURES.
Propositional and predicate logic, mathematical proof techniques, sets, combinatorics, functions and relations, graphs, and graph algorithms.
/
COMPUTER ORGANIZATION & ASSEMBLY LANGUAGE PROGRAMMING.
Computer organization from the viewpoint of software, including: the memory hierarchy, instruction set architectures, memory addressing, input-output, integer and floating-point representation and arithmetic. The relationship of higher-level programming languages to the operating system and to instruction set architecture are explored. Some programming in an assembly language.
/
INTRODUCTION TO COMPUTER SCIENCE AND ENGINEERING.
Introduction to engineering concepts, the computer science and engineering disciplines, skills for written communication, and departmental orientation.
/
COMPUTER NETWORK ORGANIZATION. 
Design and analysis of computer networks. Emphasis on the OSI architecture but discusses other schemes (e.g., ARPAnet). Data link control, local networks, protocols/architectures, network access protocols, transport protocols, internetworking, and ISDN. 
/
HISTORY OF THE UNITED STATES, 1865 TO PRESENT. 
An introduction to the political, social, economic, and cultural history of the United States since 1865. This course is designed to help students understand and evaluate their society, comprehend the historical experience, and further develop reading and writing competencies and critical skills.
/
OBJECT-ORIENTED PROGRAMMING. 
Object-oriented concepts, class diagrams, collection classes, generics, polymorphism, and reusability.  Projects involve extensive programming and include graphical user interfaces and multithreading.
/
COMPILERS FOR ALGORITHMIC LANGUAGES. 
Review of programming language structures, translation, and storage allocation. Theory and practice of compilers and issues in compiler construction including parsing, intermediate code generation, local optimization problems such as register allocation, data-flow analysis, and global optimization.
/
ENGINEERING PROBABILITY. 
Topics in engineering that involve random processes. Applications and backgrounds for topics in reliability, inventory systems, and queuing problems, including absolute and conditional probabilities, discrete and continuous random variables, parameter estimation, hypothesis testing, and an introduction to linear regression, experimental design, and analysis of variance.
/
CALCULUS II. 
Applications of integration, techniques of integration, parametric equations, polar coordinates, sequences, and series.
/
CALCULUS I.
Concepts of limit, continuity, differentiation and integration; applications of these concepts. 
/
GOVERNMENT OF THE UNITED STATES.
The constitution and government of the United States. The organization, procedures, and duties of the branches of the government, together with their accomplishments and defects.
/
PROFESSIONAL AND TECHNICAL COMMUNICATION FOR SCIENCE AND ENGINEERING.
Theory and practice in written and oral presentations with an emphasis on professional and technical communication for science and engineering. 
/
INTRODUCTION TO MATRICES AND LINEAR ALGEBRA.
Solving systems of linear equations, matrix operations, determinants, vector spaces, linear transformation, orthogonality, Gram-Schmidt process, projections, and eigenvalues and eigenvectors. 
/
COMPUTER SYSTEM DESIGN PROJECT II.
Implementation, integration, quality assurance through peer review and testing, and deployment of the project designed in CSE 4316; oral presentation, documentation and project demonstration. 
/
FUNDAMENTALS OF SOFTWARE ENGINEERING. 
Software engineering principles, processes, and techniques; software development approaches focusing on functional analysis and functional design methods. Configuration management, implementation strategies, and testing. Team project.
/
OPERATING SYSTEMS. 
Functions and components of an operating system, including process synchronization, job scheduling, memory management, file systems protection, and deadlocks. Related system software, such as loaders, linkers, assemblers, and windowing systems. 
/
ARTIFICIAL INTELLIGENCE.  
An introduction to the field of artificial intelligence studying basic techniques such as heuristic search, deduction, learning, problem solving, knowledge representation, uncertainty reasoning and symbolic programming languages such as LISP. Application areas may include intelligent agents, data mining, natural language, machine vision, planning and expert systems. 
/
LINEAR ALGEBRA FOR CSE.
Solving systems of equations, matrix algebra, determinants, vector spaces, orthogonality and least squares, with applications to computer science.
/
PROBLEM SOLVING IN ENGINEERING.
Broad introduction to engineering through the process of applying the principles of mathematics to solve real-life engineering problems. Math topics are presented within the context of engineering applications and reinforced through examples from engineering courses. Also introduces algorithm development through the use of the engineering analysis software MATLAB.
/
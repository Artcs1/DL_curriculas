/
Critical Thinking in the Digital Information Age 
Help students develop critical thinking skills using technical software. Main topics include: identifying engineering issues for investigation, developing planning and problem solving strategies, locating pertinent information and examples, critically analyzing these sources, forming and testing hypotheses, synthesizing and organizing results for effective communication, and developing transferable problem solving skills.
/
Introduction to Computer Engineering and Computer Science 
Introduction to the fields of computer engineering and computer science. Current and future trends and challenges in various fields of computing. Social, ethical and economical issues related to computing technology. Exploration of career and professional development opportunities.
/
Introduction to Programming and Problem Solving 
Introduction to basic concepts of computer science and fundamental techniques for solving problems using the Python programming language. Variables, data types, conditional statements, loops and arrays. Programming style. Applications to numerical and non-numerical problems.
/
Digital Logic and Assembly Programming 
An introductory course in Digital Logic and Assembly Programming covering number representation, digital codes, Boolean Algebra, combinatorial logic design, sequential logic design, programmable logic devices, internal organization of microprocessor and microcontroller systems and programming in assembly language.
/
Discrete Structures with Computing Applications
An introduction to discrete mathematics with applications towards computing. Topics include sets, functions, logic, relations, graphs, trees, recursion, combinatorics, and mathematical reasoning.
/
Discrete Structures with Computing Applications II 
Topics include applications of computer arithmetic and matrices in computer systems. Programming assignments in Python will be provided.
/
Object Oriented Programming and Data Structures 
Disciplined methods of design, coding and testing using the Java programming language. Data abstraction, object-oriented design. Introduction to data structures (linked lists, stacks, queues and trees.) Recursion. Sorting and searching.
/
Object Oriented Application Development 
Disciplined methods of design, coding and testing using the Java programming language. Topics include the structure and semantics of Java classes, data abstraction, encapsulation, cohesion, coupling, information hiding, object-oriented design, inheritance, interfaces, composition, delegation, polymorphism and design patterns.
/
C++ for Java Programmers 
Structured and Object Oriented Programming in C++. Common features and differences between Java and C++. Pointers, references, and memory management, stream I/O, classes, operator overloading, exception handling, STL.
/
Introduction to the Engineering Profession 
Freshman orientation seminar on careers in engineering. Speakers from various fields illustrate opportunities and challenges in the engineering profession.
/
Academic Success Skills 
Development of skills and identification of strengths and weaknesses for success in a COE major.
/
Calculus I 
Derivatives and applications including graphing, related rates, and optimization. Transcendental functions. L’Hospital’s Rule. Antiderivatives. Definite integrals. Area under a curve.
/
Calculus II 
Applications of the integral. Techniques of integration. Infinite series including convergence tests and Taylor series. Parametric equations. Polar coordinates. Introduces differential equations.
/
Mechanics and Heat 
Kinematics, Newton’s Laws, rotational motion, fluid statics, laws of thermodynamics.
/
Electricity and Magnetism 
Mechanical waves, Coulomb’s law, electrostatics, electric circuits, introductory electronics, magnetic fields, induction and Maxwell’s equations.
/
Introduction to Marine Biology
Scientific approach to the study of marine organisms and their relationships to the environment. Emphasis on human interaction with marine ecosystems.
/
General Biology 
Brief survey of major areas of biology including cell biology, genetics, evolution, phylogeny, plant and animal anatomy and physiology, ecology, and behavior
/
Human Biology 
Brief survey of human biology focusing on anatomy, physiology, and development of cells, tissues, organs, and organ systems; including molecular biology, genetics, ecology, evolution, and diversity. 
/
Human Physiology
General introduction to the functional integration of human body systems. Designed for majors in biomedical engineering, physical education, and the allied health fields.
/
Database Fundamentals 
Fundamental topics on database management. Topics include entity-relationship models, database design, data definition language, the relational model, data manipulation language, database application programming and normalization.
/
Operating Systems 
The structure and functions of operating systems. Interrupt handling, processes and interprocess communication, memory management, resource scheduling, information sharing and protection. Project implementation in C/C++.
/
Introduction to Networks and Distributed Computing 
Introduction to Distributed Computing and Interprocess Communication. Networking Protocols. Client Server Paradigm. Peer to Peer Networking. Sockets and the Socket API. Distributed Objects. Coordination, Agreements and Distributed Transactions.
/
Data Structures and Algorithms 
A broad view of data structures and the structure-preserving operations on them. Abstract data types, algorithms, complexity. Programming projects to exemplify these concepts.
/
Computer Architecture and Organization 
Review of logic design. Instruction set architecture. Arithmetic logic units. Data path and control. Pipelining and performance. Memory system organization and design. Virtual memory and paging. I/O interfacing. Vector and array processing. Distributed computing and supercomputing. Contemporary computer designs.
/
Introduction to Software Engineering 
Principles of software engineering, UML, modeling large software systems, requirements elicitation, object oriented analysis and design using UML, introduction to design patterns, implementation of large systems, software testing, project management, the software lifecycle.
/
Introduction to Computer Security Principles 
An introduction to the fundamentals of cryptography and information and computer security. Basic concepts, theories and protocols in computer security. Basic cryptography, software security, operating system security, database security, network security, human factors, social engineering, digital forensics, privacy and anonymity.
/
Probability and Statistics with Applications to Computing 
Applications of probability and statistics to computing. Topics include random variables and their statistics, probability distributions, Markov chains, Bayesian networks, sampling techniques, hypothesis testing, regression and analytic methods. Programming assignments using Python.
/
Computers, Ethics and Society 
Examination of the social impact of information technologies. Topics include a survey of the technology (software, hardware and key applications), ethical obligations of specialists, the computer in the workplace, shifts of power, privacy, and legal issues related to computing.
/
Organization of Programming Languages 
Understanding the variety of programming languages and the design trade-offs between current programming language paradigms. Comparison of programming languages in their design, implementation, and run-time supports. Includes programming projects.
/
Computer Science Senior Project I
First course in a two-course capstone design sequence that fulfills integrative learning. Design of a commercial grade software application including requirements analysis, functional, architectural and detailed design, emphasizing written communication, teamwork and the Object-Oriented Methodology.
/
Computer Science Senior Project II 
Implementation, testing, packaging and deployment of the system 
/
Scientific Research Communication
Introduction to technical writing for students pursuing research careers. Accessing and using research literature. Writing technical and research reports for various purposes and audiences. Oral presentation of research and scientific information. Includes intensive writing.
/
Theory of Computation
Finite Automata and regular expressions. Pushdown automata and context-free languages. Turing machines and computability. Computational complexity.
/
Search Engine Technology
Models, algorithms, and evaluation of the retrieval of information from a collection of documents. Document preprocessing. Indexing and searching. Retrieval evaluation. Search engines.
/
Analysis of Algorithms 
Applications of standard combinatorial techniques to applied programming problems. Rigorous analysis of correctness/complexity of algorithms. Advanced graph algorithms are emphasized. Topics include shortest paths on graphs, sorting, string matching, union find problem, divide-and-conquer technique, and weighted-edge problem.
/
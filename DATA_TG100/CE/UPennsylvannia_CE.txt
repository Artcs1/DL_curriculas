Calculus, Part I
Brief review of High School calculus, applications of integrals, transcendental functions, methods of integration, infinite series, Taylor's theorem, and first order ordinary differential equations. Use of symbolic manipulation and graphics software in calculus.
/
Programming Languages and Techniques I
A fast-paced introduction to the fundamental concepts of programming and software design. This course assumes some previous programming experience, at the level of a high school computer science class or CIS110. (If you got at least 4 in the AP Computer Science A or AB exam, you will do great.) No specific programming language background is assumed: basic experience with any language (for instance Java, C, C++, VB, Python, Perl, or Scheme) is fine.
/
Principles of Physics I: Mechanics and Wave Motion
This calculus-based course is recommended for science majors and engineering students. Classical laws of motion; interactions between particles; conservation laws and symmetry principles; particle and rigid body motion; gravitation, harmonic motion, and applications of mechanics to real-world problems.
/
General Chemistry Laboratory I
A general laboratory course covering aspects of qualitative and quantitative analysis, determination of chemical and physical properties, and chemical synthesis.
/
Calculus, Part II
Functions of several variables, vector-valued functions, partial derivatives and applications, double and triple integrals, conic sections, polar coordinates, vectors and vector calculus, first order ordinary differential equations. Applications to physical sciences. Use of symbolic manipulation and graphics software in calculus.
/
Mathematical Foundations of Computer Science
What are the basic mathematical concepts and techniques needed in computer science? This course provides an introduction to proof principles and logics, functions and relations, induction principles, combinatorics and graph theory, as well as a rigorous grounding in writing and reading mathematical proofs.
/
Engineering Electromagnetics
This course covers basic topics in engineering electromagnetics, namely, electric charge, electric field, electric energy, conductors, insulators, dielectric materials, capacitors, electric current, magnetic field, inductors, Faraday's law of induction, alternating current (AC), impedance, Maxwell's equations, electromagnetic and optical wave propagation, with emphasis on engineering issues. Relevant engineering topics are emphasized in our lectures in order to prepare students for other courses in ESE that rely on the contents on this course. Several laboratory experiments accompany the course to provide hands-on experience on some of the topics in the lecture and prepare students for the capstone project.
/
Calculus, Part III
Linear algebra: vectors, matrices, systems of linear equations, vector spaces, subspaces, spans, bases, and dimension, eigenvalues, and eigenvectors, maxtrix exponentials. Ordinary differential equations: higher-order homogeneous and inhomogeneous ODEs and linear systems of ODEs, phase plane analysis, non-linear systems.
/
Introduction to Computer Systems
You know how to program, but do you know how computers really work? How do millions of transistors come together to form a complete computing system? This bottom-up course begins with transistors and simple computer hardware structures, continues with low-level programming using primitive machine instructions, and finishes with an introduction to the C programming language. 
/
Electrical Circuits and Systems
This course gives an introduction of modern electric and electronic circuits and systems. Designing, building and experimenting with electrical and electronic circuits are challenging and fun. It starts with basic electric circuit analysis techniques of linear circuits. Today mathematical analysis is used to gain insight that supports design; and more detailed and accurate representations of circuit performance are obtained using computer simulation. It continues with 1st order and 2nd order circuits in both the time and frequency domains. It discusses the frequency behavior of circuits and the use of transfer functions. It continues with introduction of non-linear elements such as diodes and MOSFET (MOS) transistors. Applications include analog and digital circuits, such as single stage amplifiers and simple logic gates.
/
Programming Languages and Techniques II
This is a course about Algorithms and Data Structures using the JAVA programming language. We introduce the basic concepts about complexity of an algorithm and methods on how to compute the running time of algorithms. Then, we describe data structures like stacks, queues, maps, trees, and graphs, and we construct efficient algorithms based on these representations. The course builds upon existing implementations of basic data structures in JAVA and extends them for the structures like trees, studying the performance of operations on such structures, and theiefficiency when used in real-world applications. A large project introducing students to the challenges of software engineering concludes the course.
/
Embedded Systems/Microcontroller Laboratory
An introduction to interfacing real-world sensors and actuators to embedded microprocessor systems. Concepts needed for building electronic systems for real-time operation and user interaction, such as digital input/outputs, interrupt service routines, serial communications, and analog-to-digital conversion will be covered. The course will conclude with a final project where student-designed projects are featured in presentations and demonstrations.
/
Engineering Ethics
In this course, students will study the social, political, environmental and economic context of engineering practice. Students will develop an analytical toolkit to identify and address ethical challenges and opportunities in the engineering profession, including studies of risk and safety, professional responsibility, and global perspectives. The course will begin with a foundation in the history of engineering practice and major Western ethical and philosophical theories. Students will then apply this material to both historical case studies, such as Bhopal, the NASA Shuttle Program, and Three Mile Island, as well as contemporary issues in big data, artificial intelligence, and diversity within the profession. Students will consider how engineers, as well as governments, the media, and other stakeholders, address such issues.
/
Circuit-Level Modeling, Design, and Optimization for Digital Systems
Circuit-level design and modeling of gates, storage, and interconnect. Emphasis on understanding physical aspects which drive energy, delay, area, and noise in digital circuits. Impact of physical effects on design and achievable performance.
/
Embedded Software for Life-Critical Applications
The goal of this course is to give students greater design and implementation experience in embedded software development and to teach them how to model, design, verify, and validate safety critical systems in a principled manner. Students will learn the principles, methods, and techniques for building life-critical embedded systems, ranging from requirements and models to design, analysis, optimization, implementation, and validation. Topics will include modeling and analysis methods and tools, real-time programming paradigms and languages, distributed real-time systems, global time, time-triggered communications, assurance case, software architecture, evidence-based certification, testing, verification, and validation.
/
Software Design/Engineering
You know how to write a "program". But how do you create a software "product" as part of a team, with customers that have expectations of functionality and quality? This course introduces students to various tools (source control, automated build systems, programming environments, test automation, etc.) and processes (design, implementation, testing, and maintenance) that are used by professionals in the field of software engineering. Topics will include: software development lifecycle; agile and test-driven development; source control and continuous integration; requirements analysis; object-oriented design and testability; mobile and/or web application development; software testing; refactoring ; and software quality metrics.
/
Computer Organization and Design
This is the second computer oganization course and focuses on computer hardware design. Topics covered are: (1) basic digital system design including finite state machines, (2) instruction set design and simple RISC assembly programming, (3) quantitative evaluation of computer performance, (4) circuits for integer and floating-point arithmatic, (5) datapath and control, (6) micro-programming, (7) pipeling, (8) storage hierarchy and virtual memory, (9) input/output, (10) different forms of parallelism including instruction level parallelism, data-level parallelism using both vectors and message-passing multi-processors, and thread-level parallelism using shared memory multiprocessors. Basic cache coherence and synchronization.
/
Computer Operating Systems
This course surveys methods and algorithms used in modern operating systems. Concurrent distributed operation is emphasized. The main topics covered are as follows: process synchronization; interprocess communication; concurrent/distributed programming languages; resource allocation and deadlock; virtual memory; protection and security; distributed operation; distributed data; performance evalaution.
/
Introduction to Networks and Protocols
This is an introductory course on packet networks and associated protocols, with a particular emphasis on IP-based networks such as the Internet. The course introduces design and implementation choices that underlie the development of modern networks, and emphasizes basic analytical understanding of the concepts. Topics are covered in a mostly "bottom-up" approach starting with a brief review of physical layer issues such as digital transmission, error correction and error recovery strategies. This is followed by a discussion of link layer aspects, including multiple access strategies, local area networks (Ethernet and 802.11 wireless LANs), and general store-and-forward packet switching. Network layer solutions, including IP addressing, naming, and routing are covered next, before exploring transport layer and congestion control protocols (UDP and TCP). Finally, basic approaches for quality-of-service and network security are examined. Specific applications and aspects of data compression and streaming may also be covered.
/
Introductory Statistics
Introduction to concepts in probability. Basic statistical inference procedures of estimation, confidence intervals and hypothesis testing directed towards applications in science and medicine. The use of the JMP statistical package.
/
Engineering Economics
This course investigates methods of economic analysis for decision making among alternative courses of action in engineering applications. Topics include: cost-driven design economics, break-even analysis, money-time relationships, rates of return, cost estimation, depreciation and taxes, foreign exchange rates, life cycle analysis, benefit-cost ratios, risk analysis, capital financing and allocation, and financial statement analysis. Case studies apply these topics to actual engineering problems.
/
Statistics for Data Science
The course covers the methodological foundations of data science, emphasizing basic concepts in statistics and learning theory, but also modern methodologies. Learning of distributions and their parameters. Testing of multiple hypotheses. Linear and nonlinear regression and prediction. Classification. Uncertainty quantification. Model validation. Clustering. Dimensionality reduction. Probably approximately correct (PAC) learning. Such theoretical concepts are further complemented by exempla r applications, case studies (datasets), and programming exercises (in Python) drawn from electrical engineering, computer science, the life sciences, finance, and social networks.
/
Introduction to Networks and Protocols
This is an introductory course on packet networks and associated protocols, with a particular emphasis on IP-based networks such as the Internet. The course introduces design and implementation choices that underlie the development of modern networks, and emphasizes basic analytical understanding of the concepts. Topics are covered in a mostly "bottom-up" approach starting with a brief review of physical layer issues such as digital transmission, error correction and error recovery strategies. This is followed by a discussion of link layer aspects, including multiple access strategies, local area networks (Ethernet and 802.11 wireless LANs), and general store-and-forward packet switching. Network layer solutions, including IP addressing, naming, and routing are covered next, before exploring transport layer and congestion control protocols (UDP and TCP). Finally, basic approaches for quality-of-service and network security are examined. Specific applications and aspects of data compression and streaming may also be covered.
/
Analog Integrated Circuits
Design of analog circuits and subsystems using primarily MOS technologies at the transistor and higher levels. Transistor level design of building block circuits such as op amps, comparators, sample and hold circuits, voltage and current references, capacitors and resistor and class AB output stages. The Cadence Design System will be used to capture schematics and run simulations using Spectre for some homework problems and for the course project. Topics of stability, noise, device matching through good layout practice will also be covered. Students who take ESE419 will not be able to take ESE572 later. More will be expected of ESE572 students in the design project.
/
Agent-Based Modeling and Simulation
Agents are a new technique for trying to model, simulate, and understand systems that are ill-structured and whose mathematics is initially unknown and possibly unknowable. This approach allows the analyst to assemble models of agents and components where micro-decision rules may be understood; to bring the agents and components together as a system where macro-behavior then emerges; and to use that to empirically probe and improve understanding of the whole, the interrelations of the components, and synergies. This approach helps one explore parametrics, causality, and what-ifs about socio-technical systems (technologies that must support people, groups, crowds, organizations, and societies). It is applicable when trying to model and understand human behavior - consumers, investors, passengers, plant operators, patients, voters, political leaders, terrorists, and so on. This course will allow students to investigate and compare increasingly complex agent based paradigms along three lines - math foundations, heuristic algorithms/knowledge representations, and empirical science. The student will gain a toolbox and methodology for attempting to represent and study complex socio-technical systems.
/
Control For Autonomous Robots
This course introduces the hardware, software and control technology used in autonomous ground vehicles, commonly called "self-driving cars." The weekly laboratory sessions focus on development of a small-scale autonomous car, incrementally enhancing the sensors, software, and control algorithms to culminate in a demonstration in a realistic outdoor operating environment. Students will learn basic physics and modeling; controls design and analysis in Matlab and Simulink; software implementation in C and Python; sensor systems and filtering methods for IMUs, GPS, and computer vision systems; and path planning from fixed map data.
/
Quantum Engineering
Quantum engineering - the design, fabrication, and control of quantum coherent devices - has emerged as a multidisciplinary field spanning physics, electrical engineering, materials science, chemistry, and biology, with the potential for transformational advances in computation, secure communication, and nanoscale sensing. This course surveys the state of the art in quantum hardware, beginning with an overview of the physical implementation requirements for a quantum computer and proceeding to a synopsis of the leading contenders for quantum building blocks, including spins in semiconductors, superconducting circuits, photons, and atoms. The course combines background material on the fundamental physics and engineering principles required to build and control these devices with readings drawn from the current literature, including promising architectures for scaling physical qubits into larger devices and secure communication networks, and for nanoscale sensing applications impacting biology, chemistry, and materials
/
Project Management
The course emphasizes a systems engineering approach to project management including the cycle costing and analysis, project scheduling, project organization and control, contract management, project monitoring and negotiations. In addition, the course will also examine management issues in large infrastructure projects like non-recourse or limited recourse project financing. Examples from the logistics planning process and global software project management will be used to highlight the course topics.
/'
Senior Design Project I - EE and SSE
This is the first of a two-semester sequence in electrical and systems engineering senior design. Student work will focus on project/team definition, systems analysis, identification alternative design strategies and determination (experimental or by simulation) or specifications necessary for a detailed design. Project definition is focused on defining a product prototype that provides specific value to a least one identified user group. Students will receive guidance on preparing professional written and oral presentations. Each project team will submit a project proposal and two written project reports that include coherent technical presentations, block diagrams and other illustrations appropriate to the project. Each student will deliver two formal Powerpoint presentations to an audience comprised of peers, instructors and project advisors. During the semester there will be periodic individual-team project reviews.
/
Senior Design Project II - EE and SSE
This is the second of a two term sequence in electrical and systems engineering senior design. Student work will focus on completing the product prototype design undertaken in ESE 450 and successfully implementing the said product prototype. Success will be verified using experimental and/or simulation methods appropriate to the project that test the degree to which the project objectives are achieved. Each project team will prepare a poster to support a final project presentation and demonstration to peers, faculty and external judges. The course will conclude with the submission of a final project written team report. During the semester there will be periodic project reviews with individual teams.
/
Principles of Microfabrication Technology
A laboratory-based course on fabricating microelectronic and micromechanical devices using photolithographic processing and related fabrication technologies. Lectures discuss: clean room procedures; microelectronic and microstructural materials; photolithography; diffusion, oxidation; materials deposition; etching and plasma processes. Basic laboratory processes are covered for the first two thirds of the course with students completing structures appropriate to their major in the final third. Students registering for ESE 574 will be expected to do extra work (including term paper and additional project).
/